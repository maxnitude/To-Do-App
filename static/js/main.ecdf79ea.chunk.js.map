{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","React","Component","PostStatusFilter","buttons","name","label","map","clazz","filter","onClick","onFilterSelect","PostListItem","onDelete","onToggleImportant","onToggleLike","classNames","important","like","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","maxlength","App","data","deleteItem","addItem","newId","index","findIndex","elem","before","slice","after","body","newItem","length","trim","old","items","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecdf79ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>ToDoList</h1>\r\n            <h2>Количество записей: {allPosts}, из них понравилось: {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    } \r\n    \r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <input  \r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons =[\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'},\r\n        ]\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const active = this.props.filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            \r\n            return (\r\n                <button \r\n                    key={name} \r\n                    className={`btn ${clazz}`} \r\n                    type=\"button\"\r\n                    onClick={() => this.props.onFilterSelect(name)}\r\n                    >{label}\r\n                </button>\r\n            )\r\n        })\r\n        \r\n        return (\r\n            <div className=\"btn-group\">\r\n                \r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './post-list-item.css';\r\n\r\n\r\nexport default class PostListItem extends React.Component {\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLike, important, like} = this.props;\r\n        let classNames = \"app-list-item\";\r\n        \r\n        if (important) {\r\n            classNames += \" important\";\r\n        }\r\n\r\n        if (like) {\r\n            classNames += \" like\";\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <p className=\"app-list-item-label \" \r\n                    onClick={onToggleLike}>\r\n                        {label}\r\n                </p>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button \r\n                        type=\"button\"\r\n                        className=\"btn-star btn-sm\"\r\n                        onClick={onToggleImportant}>\r\n                            <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                        type=\"button\"\r\n                        className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}>\r\n                            <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PostListItem from '../post-list-item/post-list-item';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLike}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem \r\n                    {...itemProps} \r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLike={() => onToggleLike(id)} />\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends React.Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    \r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    maxlength=\"40\"\r\n                    type=\"text\"\r\n                    placeholder=\"Напишите что-нибудь: не более 40 символов\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n","import React from 'react';\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\r\nimport PostList from  '../post-list/post-list';\r\nimport PostAddForm from '../post-add-form/post-add-form';\r\nimport './app.css';\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: 'Написать что-нибудь в форме снизу', important: false, like: false, id: 1000},\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLike = this.onToggleLike.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.newId = 1001;\r\n        }\r\n \r\n    deleteItem (id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const before = data.slice (0, index);\r\n            const after = data.slice(index + 1);\r\n            const newData = [...before, ...after];\r\n            return {\r\n                data: newData\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem (body) {\r\n        const newItem = {\r\n            label: body || null,\r\n            important: false,\r\n            id: this.newId++\r\n            }\r\n\r\n        this.setState(({data}) => {\r\n            if (newItem.label === null || newItem.label.length > 40 || !newItem.label.trim()) {   \r\n                \r\n                return [...data]\r\n            } else {\r\n                const newData = [...data, newItem];\r\n                return {\r\n                data: newData\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n            const newArr = [...data.slice (0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleLike(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n            const newArr = [...data.slice (0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0 ) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        })\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term});\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter});\r\n    }\r\n\r\n    render () {\r\n        const {data, term, filter} = this.state;\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n        \r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel \r\n                        onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts} \r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLike={this.onToggleLike} />\r\n                <PostAddForm onAdd={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\n\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}